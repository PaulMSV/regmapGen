.. _config:

=====================
Конфигурационный файл
=====================

regmapGen использует простой плоский ini-файл конфигурации с именем  ``config``. Он используется с целью:

- передать глобальные параметры в regmapGen
- указать все цели генерации со всеми их атрибутами

Пример ``config`` файла:

.. code-block:: ini

    [globcfg]
    data_width = 32
    address_width = 16
    register_reset = sync_pos

    [sv_module]
    path = regs.sv
    interface = axil
    generator = SystemVerilog

    [c_header]
    path = regs.h
    generator = CHeader

У него есть один специальный раздел ``globcfg`` для глобальных параметров и один или несколько Target разделов для целей генерации.

Раздел globcfg
==============

Доступные глобальные параметры:

+-----------------------+----------------+-----------------------------------------------------------------------------------------------------+
| Параметр              | По умолчанию   | Описание                                                                                            |
+=======================+================+=====================================================================================================+
| ``base_address``      | 0              | Register map base address in global address map                                                     |
+-----------------------+----------------+-----------------------------------------------------------------------------------------------------+
| ``data_width``        | 32             | Width of all data buses and registers                                                               |
+-----------------------+----------------+-----------------------------------------------------------------------------------------------------+
| ``address_width``     | 16             | Address bus width (capacity of the register map)                                                    |
+-----------------------+----------------+-----------------------------------------------------------------------------------------------------+
| ``register_reset``    | ``sync_pos``   | Flip-flop reset style                                                                               |
|                       |                +---------------+-------------------------------------------------------------------------------------+
|                       |                | ``sync_pos``  | Synchronous active high reset                                                       |
|                       |                +---------------+-------------------------------------------------------------------------------------+
|                       |                | ``sync_neg``  | Synchronous active low reset                                                        |
|                       |                +---------------+-------------------------------------------------------------------------------------+
|                       |                | ``async_pos`` | Asynchronous active high reset                                                      |
|                       |                +---------------+-------------------------------------------------------------------------------------+
|                       |                | ``async_neg`` | Asynchronous active low reset                                                       |
+-----------------------+----------------+---------------+-------------------------------------------------------------------------------------+
| ``address_increment`` | ``none``       | Address auto increment mode, if no address is provided for a register                               |
|                       |                +------------------------+----------------------------------------------------------------------------+
|                       |                | ``none``               | Address auto increment mode is disabled                                    |
|                       |                +------------------------+----------------------------------------------------------------------------+
|                       |                | ``data_width``         | Enable address auto increment with value based on ``globcfg.data_width``   |
|                       |                +------------------------+----------------------------------------------------------------------------+
|                       |                | ``<positive-integer>`` | Enable address auto increment with provided number of bytes, e.g 4         |
+-----------------------+----------------+------------------------+----------------------------------------------------------------------------+
| ``address_alignment`` | ``data_width`` | Check for address alignment of registers.                                                           |
|                       |                +------------------------+----------------------------------------------------------------------------+
|                       |                | ``none``               | No check of address alignment                                              |
|                       |                +------------------------+----------------------------------------------------------------------------+
|                       |                | ``data_width``         | Enable check of address alignment based on ``globcfg.data_width``          |
|                       |                +------------------------+----------------------------------------------------------------------------+
|                       |                | ``<positive-integer>`` | Enable check of address alignment based on provided number of bytes, e.g 4 |
+-----------------------+----------------+------------------------+----------------------------------------------------------------------------+
| ``force_name_case``   | ``none``       | Force case for all the names (regsiters, bit fields, enums)                                         |
|                       |                +-----------+-----------------------------------------------------------------------------------------+
|                       |                | ``none``  | Names used as they are                                                                  |
|                       |                +-----------+-----------------------------------------------------------------------------------------+
|                       |                | ``lower`` | Force names to have lowercase                                                           |
|                       |                +-----------+-----------------------------------------------------------------------------------------+
|                       |                | ``upper`` | Force names to have uppercase                                                           |
+-----------------------+----------------+-----------+-----------------------------------------------------------------------------------------+

Вы можете опустить любой из этих параметров в вашем ``config`` файле - будет использовано значение по умолчанию.

Вы также можете добавлять свои собственные параметры и обращаться к ним так же, как и к стандартным. Валидный конфигурационный файл в этом случае:

.. code-block:: ini

    [globcfg]
    data_width = 32
    address_width = 16
    register_reset = sync_pos
    foo = bar

Раздел Target
=============

Раздел Target определяет генератор файлов и указывает его параметры.
Генератор - это класс Python, который производит некоторый вывод на основе входных аргументов.
Обычно, один раздел Target соответствует одному выходному файлу.

Несколько простых правил, которые стоит запомнить:

* Имя Target должно быть уникальным
* Target без параметра ``generator`` игнорируется

Параметр ``generator`` может быть определен двумя способами. С использованием встроенного генератора:

.. code-block:: ini

    [target]
    generator = SystemVerilog

Или с использованием пользовательского генератора:

.. code-block:: ini

    [target]
    generator = custom_generator.py::MyCustomGenerator

Если вас интересует расширение функциональности regmapGen, то `тут <https://github.com/paulmsv/regmapGen/tree/master/examples/custom_generator>`_ есть пример, как создать свой собственный генератор и использовать его с CLI regmapGen.

Генераторы
==========

regmapGen предоставляет следующие встроенные генераторы:

======================== ================================================================
Генератор                Описание
======================== ================================================================
``Json``                 Выгрузить Регистровую карту в JSON файл
``Yaml``                 Выгрузить Регистровую карту в YAML файл
``Txt``                  Выгрузить Регистровую карту в текстовый файл
``SystemVerilog``        Создать SystemVerilog файл с Регистровой картой
``SystemVerilogHeader``  Создать SystemVerilog header с define-макросов Регистровой карты
``SystemVerilogPackage`` Создать SystemVerilog package с набором параметров Регистровой карты
``CHeader``              Создать C header файл с набором define-макросов Регистровой карты
``Markdown``             Создать документацию для Регистровой карты в Markdown формате
``Asciidoc``             Создать документацию для Регистровой карты в AsciiDoc формате
``Python``               Создать Python файл с Регистровой картой
======================== ================================================================

Есть еще несколько генераторов, но обычно они не используются в файле ``config`` - они 
полезны для создания пользовательских генераторов или других задач разработки.

========================= ================================================================
Генератор                 Описание
========================= ================================================================
``Generator``             Базовый класс генератора
``Jinja2``                Базовый класс для рендеринга шаблонов Jinja2
``Wavedrom``              Базовый класс для рендеринга изображений регистров с помощью Wavedrom
``LbBridgeSystemVerilog`` Создать SystemVerilog файл с bridge для Local Bus
========================= ================================================================

.. note::

    Следующие параметры в ``config`` файле представляют собой аргументы для конструктора класса.
    Если параметр не указан, будет использовано значение по умолчанию.
    Обратите внимание, что таблицы ниже были созданы вручную, в то время как данные на странице 
    :ref:`Генераторы API <generators-api>` были собраны автоматически.
    Поскольку это одна и та же информация, представленная в разных формах, обратитесь к API, если у вас возникнут сомнения.

Json
----
========= ============= ================================================================
Параметр  По умолчанию  Описание
========= ============= ================================================================
``path``  ``regs.json`` Путь к выходному файлу
========= ============= ================================================================

Yaml
----
========= ============= ================================================================
Параметр  По умолчанию  Описание
========= ============= ================================================================
``path``  ``regs.yaml`` Путь к выходному файлу
========= ============= ================================================================

Txt
---
========= ============= ================================================================
Параметр  По умолчанию  Описание
========= ============= ================================================================
``path``  ``regs.txt``  Путь к выходному файлу
========= ============= ================================================================

SystemVerilog
-------------
+-----------------+--------------+----------------------------------------------------------------------+
| Параметр        | По умолчанию | Описание                                                             |
+=================+==============+======================================================================+
| ``path``        | ``regs.sv``  | Путь к выходному файлу                                               |
+-----------------+--------------+----------------------------------------------------------------------+
| ``read_filler`` | 0            | Числовое значение, которое вернется при обращению к неверному адресу |
+-----------------+--------------+----------------------------------------------------------------------+
| ``interface``   | ``axil``     | Протокол шины Регистровой карты                                      |
|                 |              +-----------+----------------------------------------------------------+
|                 |              | ``axil``  | AXI4-Lite                                                |
|                 |              +-----------+----------------------------------------------------------+
|                 |              | ``amm``   | Avalon-MM                                                |
|                 |              +-----------+----------------------------------------------------------+
|                 |              | ``apb``   | APB4                                                     |
|                 |              +-----------+----------------------------------------------------------+
|                 |              | ``lb``    | Пользовательский LocalBus интерфейс                      |
+-----------------+--------------+-----------+----------------------------------------------------------+

SystemVerilogHeader
-------------------
========== ============ ================================================================
Параметр   По умолчанию Описание
========== ============ ================================================================
``path``   ``regs.svh`` Путь к выходному файлу
``preifx`` ``CSR``      Префикс для всех define. Если пусто, будет использовано имя выходного файла.
========== ============ ================================================================

SystemVerilogPackage
--------------------
========== =============== ================================================================
Параметр   По умолчанию    Описание
========== =============== ================================================================
``path``   ``regs_pkg.sv`` Путь к выходному файлу
``preifx`` ``CSR``         Префикс для всех define. Если пусто, будет использовано имя выходного файла.
========== =============== ================================================================

CHeader
-------
========== ============ ================================================================
Параметр   По умолчанию Описание
========== ============ ================================================================
``path``   ``regs.h``   Путь к выходному файлу
``preifx`` ``CSR``      Префикс для всех define. Если пусто, будет использовано имя выходного файла.
========== ============ ================================================================

Markdown
--------
===================== ================ ================================================================
Параметр              По умолчанию     Описание
===================== ================ ================================================================
``path``              ``regs.md``      Путь к выходному файлу
``title``             ``Register map`` Заголовок документа
``print_images``      ``True``         Включить генерацию изображений для битовых полей регистра
``image_dir``         ``regs_img``     Путь к директории, где будут сохранены все изображения
``print_conventions`` ``True``         Включить генерацию таблицы с объяснением режимов доступа к регистру
===================== ================ ================================================================

Asciidoc
--------
===================== ================ ================================================================
Параметр              По умолчанию     Описание
===================== ================ ================================================================
``path``              ``regs.md``      Путь к выходному файлу
``title``             ``Register map`` Заголовок документа
``print_images``      ``True``         Включить генерацию изображений для битовых полей регистра
``image_dir``         ``regs_img``     Путь к директории, где будут сохранены все изображения
``print_conventions`` ``True``         Включить генерацию таблицы с объяснением режимов доступа к регистру
===================== ================ ================================================================

Python
------
========== ============ ================================================================
Параметр   По умолчанию Описание
========== ============ ================================================================
``path``   ``regs.py``  Путь к выходному файлу
========== ============ ================================================================
